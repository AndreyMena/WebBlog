@model IPagedList<WebBlog.Models.Domain.Tag>
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc
@*

<link href="~/Content/PagedList.css" rel="stylesheet"
      type="text/css" />
*@

<link href="c:\users\andre\onedrive\escritorio\webblog\webblog\views\content\pagedlist.css" rel="stylesheet" />
@{
    Layout = null;
}

<div id="content">
    <div class="container py-5">
        @if (Model != null && Model.Any())
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Display Name</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var tag in Model)
                    {
                        <tr>
                            <td>@tag.Id</td>
                            <td>@tag.Name</td>
                            <td>@tag.DisplayName</td>
                            <td><a class="" asp-area="" asp-controller="AdminTags" asp-action="Edit" asp-route-id="@tag.Id">Edit</a></td>
                        </tr>
                    }
                </tbody>
            </table>
            <div id="contentPager">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                @Html.PagedListPager(Model, indexPage => Url.Action("List", new { indexPage }))
                @*

                @Html.PagedListPager((IPagedList)Model, page => Url.Action("List", new { indexPage = page }))
                *@

            </div>
        }
        else
        {
            <p>No tags found!</p>
        }
    </div>
</div>

    @*
@section Scripts{
        document.addEventListener("DOMContentLoaded", function () {
        document.addEventListener("click", function (event) {
            if (event.target.matches("#contentPager a[href]")) {
                event.preventDefault();

                fetch(event.target.href, {
                    method: 'GET',
                    cache: 'no-cache'
                })
                .then(function (response) {
                    return response.text();
                })
                .then(function (result) {
                    document.querySelector('#content').innerHTML = result;
                });
            }
        });
    });
    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
            $(document).on("click", "#contentPager a[href]", function () {
                $.ajax({
                    url: $(this).attr("href"),
                    type: 'GET',
                    cache: false,
                    success: function (result) {
                        $('#content').html(result);
                    }
                });
                return false;
            });
        });
    </script>

}
    *@
@*
@await Component.InvokeAsync("List",
    new { indexPage =  ViewData["indexPage"]})
)

*@